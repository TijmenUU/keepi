// <auto-generated />
using System;
using Keepi.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Keepi.Infrastructure.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250602200716_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("Keepi.Infrastructure.Data.Entries.UserEntryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("Minutes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Remark")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserEntryCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Date");

                    b.HasIndex("UserEntryCategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("UserEntries");
                });

            modelBuilder.Entity("Keepi.Infrastructure.Data.UserEntryCategories.UserEntryCategoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly?>("ActiveFrom")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("ActiveTo")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("ActiveFrom", "ActiveTo");

                    b.HasIndex("Name", "UserId")
                        .IsUnique();

                    b.ToTable("UserEntryCategories");
                });

            modelBuilder.Entity("Keepi.Infrastructure.Data.Users.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<int>("IdentityOrigin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmailAddress")
                        .IsUnique();

                    b.HasIndex("ExternalId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Keepi.Infrastructure.Data.Entries.UserEntryEntity", b =>
                {
                    b.HasOne("Keepi.Infrastructure.Data.UserEntryCategories.UserEntryCategoryEntity", "UserEntryCategory")
                        .WithMany("UserEntries")
                        .HasForeignKey("UserEntryCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Keepi.Infrastructure.Data.Users.UserEntity", "User")
                        .WithMany("Entries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("UserEntryCategory");
                });

            modelBuilder.Entity("Keepi.Infrastructure.Data.UserEntryCategories.UserEntryCategoryEntity", b =>
                {
                    b.HasOne("Keepi.Infrastructure.Data.Users.UserEntity", "User")
                        .WithMany("UserEntryCategories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Keepi.Infrastructure.Data.UserEntryCategories.UserEntryCategoryEntity", b =>
                {
                    b.Navigation("UserEntries");
                });

            modelBuilder.Entity("Keepi.Infrastructure.Data.Users.UserEntity", b =>
                {
                    b.Navigation("Entries");

                    b.Navigation("UserEntryCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
